// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  phone      String?
  role       UserRole   @default(BUYER)
  properties Property[]
  projects   Project[]
  createdAt  DateTime   @default(now())
}

model Property {
  id           Int            @id @default(autoincrement())
  title        String
  description  String
  price        Float
  address      String
  propertyType PropertyType
  status       PropertyStatus @default(AVAILABLE)
  images       Image[]
  userId       Int
  user         User           @relation(fields: [userId], references: [id])
  projectId    Int?
  project      Project?       @relation(fields: [projectId], references: [id])
  cityId       Int
  city         City           @relation(fields: [cityId], references: [id])
  createdAt    DateTime       @default(now())
}

model Project {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  address     String
  developerId Int
  developer   Developer  @relation(fields: [developerId], references: [id])
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  properties  Property[]
  cityId      Int
  city        City       @relation(fields: [cityId], references: [id])
  createdAt   DateTime   @default(now())
}

model Developer {
  id        Int       @id @default(autoincrement())
  name      String
  website   String?
  projects  Project[]
  createdAt DateTime  @default(now())
}

model Country {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  code   String  @unique // ISO 3166-1 alpha-2 code
  states State[]
}

model State {
  id        Int     @id @default(autoincrement())
  name      String
  code      String? // Optional state code
  countryId Int
  country   Country @relation(fields: [countryId], references: [id])
  cities    City[]
}

model City {
  id         Int        @id @default(autoincrement())
  name       String
  stateId    Int
  state      State      @relation(fields: [stateId], references: [id])
  properties Property[]
  projects   Project[]
}

model Image {
  id         Int      @id @default(autoincrement())
  url        String
  propertyId Int
  property   Property @relation(fields: [propertyId], references: [id])
}

enum UserRole {
  BUYER
  SELLER
  ADMIN
}

enum PropertyType {
  APARTMENT
  HOUSE
  LAND
  OFFICE
  COMMERCIAL
}

enum PropertyStatus {
  AVAILABLE
  SOLD
  UNDER_CONSTRUCTION
  RESERVED
}
